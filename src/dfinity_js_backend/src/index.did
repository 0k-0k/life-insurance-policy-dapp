service: (record {reservationFee:nat64}) -> {
    addPolicy: (record {pricePerPolicy:nat64; policyStartDate:nat64; description:text; isClaimed:bool; imageUrl:text; coverageAmount:nat64; policyEndDate:nat64; premiumAmount:nat64; policyHolderName:text}) -> (variant {Ok:record {id:text; creator:principal; pricePerPolicy:nat64; policyStartDate:nat64; isAvailable:bool; currentReservationEnds:opt nat64; description:text; isClaimed:bool; imageUrl:text; currentReservedTo:opt principal; coverageAmount:nat64; isReserved:bool; policyEndDate:nat64; premiumAmount:nat64; policyHolderName:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; NotBooked:text; Booked:text; NotOwner:text; PaymentCompleted:text}});
    completeReservation: (text, nat64, nat64, nat64) -> (variant {Ok:record {status:variant {PaymentPending:text; Completed:text}; memo:nat64; noOfPolicy:nat64; payer:principal; amount:nat64; paid_at_block:opt nat64; policyId:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; NotBooked:text; Booked:text; NotOwner:text; PaymentCompleted:text}});
    createReservationOrder: (text, nat64) -> (variant {Ok:record {status:variant {PaymentPending:text; Completed:text}; memo:nat64; noOfPolicy:nat64; payer:principal; amount:nat64; paid_at_block:opt nat64; policyId:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; NotBooked:text; Booked:text; NotOwner:text; PaymentCompleted:text}});
    deletePolicy: (text) -> (variant {Ok:text; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; NotBooked:text; Booked:text; NotOwner:text; PaymentCompleted:text}});
    endReservation: (text) -> (variant {Ok:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; NotBooked:text; Booked:text; NotOwner:text; PaymentCompleted:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; NotBooked:text; Booked:text; NotOwner:text; PaymentCompleted:text}});
    getAddressFromPrincipal: (principal) -> (text) query;
    getBookings: () -> (vec record {status:variant {PaymentPending:text; Completed:text}; memo:nat64; noOfPolicy:nat64; payer:principal; amount:nat64; paid_at_block:opt nat64; policyId:text}) query;
    getCanisterAddress: () -> (text) query;
    getClaimedPolicy: (nat64) -> (variant {Ok:vec record {id:text; creator:principal; pricePerPolicy:nat64; policyStartDate:nat64; isAvailable:bool; currentReservationEnds:opt nat64; description:text; isClaimed:bool; imageUrl:text; currentReservedTo:opt principal; coverageAmount:nat64; isReserved:bool; policyEndDate:nat64; premiumAmount:nat64; policyHolderName:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; NotBooked:text; Booked:text; NotOwner:text; PaymentCompleted:text}}) query;
    getPendings: () -> (vec record {status:variant {PaymentPending:text; Completed:text}; memo:nat64; noOfPolicy:nat64; payer:principal; amount:nat64; paid_at_block:opt nat64; policyId:text}) query;
    getPolicies: () -> (vec record {id:text; creator:principal; pricePerPolicy:nat64; policyStartDate:nat64; isAvailable:bool; currentReservationEnds:opt nat64; description:text; isClaimed:bool; imageUrl:text; currentReservedTo:opt principal; coverageAmount:nat64; isReserved:bool; policyEndDate:nat64; premiumAmount:nat64; policyHolderName:text}) query;
    getPolicy: (text) -> (variant {Ok:record {id:text; creator:principal; pricePerPolicy:nat64; policyStartDate:nat64; isAvailable:bool; currentReservationEnds:opt nat64; description:text; isClaimed:bool; imageUrl:text; currentReservedTo:opt principal; coverageAmount:nat64; isReserved:bool; policyEndDate:nat64; premiumAmount:nat64; policyHolderName:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; NotBooked:text; Booked:text; NotOwner:text; PaymentCompleted:text}}) query;
    getPolicyByDate: (text, text) -> (variant {Ok:vec record {id:text; creator:principal; pricePerPolicy:nat64; policyStartDate:nat64; isAvailable:bool; currentReservationEnds:opt nat64; description:text; isClaimed:bool; imageUrl:text; currentReservedTo:opt principal; coverageAmount:nat64; isReserved:bool; policyEndDate:nat64; premiumAmount:nat64; policyHolderName:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; NotBooked:text; Booked:text; NotOwner:text; PaymentCompleted:text}}) query;
    getPolicyByPolicyHolderName: (nat64) -> (variant {Ok:vec record {id:text; creator:principal; pricePerPolicy:nat64; policyStartDate:nat64; isAvailable:bool; currentReservationEnds:opt nat64; description:text; isClaimed:bool; imageUrl:text; currentReservedTo:opt principal; coverageAmount:nat64; isReserved:bool; policyEndDate:nat64; premiumAmount:nat64; policyHolderName:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; NotBooked:text; Booked:text; NotOwner:text; PaymentCompleted:text}}) query;
    getReservationFee: () -> (nat64) query;
}
